{"version":3,"sources":["../../../src/services/profile.js"],"names":["PROFILES","FIXTURES_DIRECTORY","process","cwd","fixturesDirectory","PROFILE_DIRECTORY","getExistingProfileRequests","profile","JSON","readFileSync","parse","saveRequestsAsProfile","requests","writeFileSync","stringify","createProfileData","profileDataFilePath","unlinkSync","console","log","profileDataContent","readdirSync","files","forEach","file","profileName","basename","toLowerCase"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,UAAjB;AACA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAASC,QAAQC,GAAR,EAAT,SAA0B,uBAAWC,iBAArC;AAAA,CAA3B;AACO,IAAMC,gDAAoB,SAApBA,iBAAoB;AAAA,SAASJ,oBAAT,SAAiCD,QAAjC;AAAA,CAA1B;;AAEA,IAAMM;AAAA,qEAA6B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAE/BC,IAF+B;AAAA;AAAA,mBAEd,aAAGC,YAAH,CAAmBJ,mBAAnB,SAA0CE,OAA1C,YAA0D,OAA1D,CAFc;;AAAA;AAAA;AAAA,yDAE1BG,KAF0B;;AAAA;AAAA;AAAA;AAAA,6CAI/B,EAJ+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAQA,IAAMC;AAAA,sEAAwB,kBAAeC,QAAf,EAAyBL,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC7B,2BAAOF,mBAAP,CAD6B;;AAAA;AAAA;AAAA,mBAE7B,aAAGQ,aAAH,CAAoBR,mBAApB,SAA2CE,OAA3C,YAA2DC,KAAKM,SAAL,CAAeF,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAA3D,EAA8F,MAA9F,CAF6B;;AAAA;AAAA;AAAA,mBAG7BG,mBAH6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAMP,IAAMA;AAAA,sEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,+BADgB,GACSf,oBADT;AAAA;AAAA;AAAA,mBAGZ,aAAGgB,UAAH,MAAiBD,mBAAjB,CAHY;;AAAA;AAIlBE,oBAAQC,GAAR,CAAY,0BAAwBH,mBAApC;AAJkB;AAAA;;AAAA;AAAA;AAAA;;AAMlBE,oBAAQC,GAAR,CAAY,+BAAZ;;AANkB;AASlBC,8BATkB,GASG,EATH;AAAA;AAAA,mBAUF,aAAGC,WAAH,CAAehB,mBAAf,CAVE;;AAAA;AAUhBiB,iBAVgB;;AAWtBA,kBAAMC,OAAN,CAAc,UAACC,IAAD,EAAU;AACrB,kBAAMC,cAAc,eAAKC,QAAL,CAAcF,IAAd,EAAoB,OAApB,CAApB;AACAJ,sDAAsCK,YAAYE,WAAZ,EAAtC,6BAAsF3B,QAAtF,SAAkGyB,WAAlG;AACF,aAHD;;AAXsB;AAAA,mBAgBhB,aAAGZ,aAAH,CAAiBG,mBAAjB,EAAsCI,kBAAtC,CAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"profile.js","sourcesContent":["import mkdirp from 'async-mkdirp';\nimport fs from 'fs';\nimport path from 'path';\nimport { getState } from './state';\n\nconst PROFILES = 'profiles';\nconst FIXTURES_DIRECTORY = () => `${process.cwd()}/${getState().fixturesDirectory}`;\nexport const PROFILE_DIRECTORY = () => `${FIXTURES_DIRECTORY()}/${PROFILES}`;\n\nexport const getExistingProfileRequests = async(profile) => {\n  try {\n    return JSON.parse(await fs.readFileSync(`${PROFILE_DIRECTORY()}/${profile}.json`, 'utf-8'));\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const saveRequestsAsProfile = async function(requests, profile) {\n  await mkdirp(PROFILE_DIRECTORY());\n  await fs.writeFileSync(`${PROFILE_DIRECTORY()}/${profile}.json`, JSON.stringify(requests, null, 2), 'utf8');\n  await createProfileData();\n};\n\nconst createProfileData = async function() {\n    const profileDataFilePath = `${FIXTURES_DIRECTORY()}/profileData.js`;\n    try {\n        await fs.unlinkSync(`${profileDataFilePath}`);\n        console.log('successfully deleted '+profileDataFilePath);\n    } catch (e) {\n        console.log('There is no profile data yet!');\n    }\n\n    let profileDataContent = '';\n    const files = await fs.readdirSync(PROFILE_DIRECTORY());\n    files.forEach((file) => {\n       const profileName = path.basename(file, '.json');\n       profileDataContent += `export const ${profileName.toLowerCase()} = () => require('./${PROFILES}/${profileName}');\\n\\n`;\n    });\n\n    await fs.writeFileSync(profileDataFilePath, profileDataContent);\n};"]}